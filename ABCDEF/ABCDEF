//! Bismillahi-Rahamanirahim.
/** ========================================**
 ** @Author: A Asif Khan Chowdhury
/** ========================================**/


/**................ Headers ................**/
#include <bits/stdc++.h>

using namespace std;

/**................ Macros ................**/
#define Set(N, j) (N|(1<<j))
#define reset(N, j) (N&~(1<<j))
#define Check(N, j) (bool)(N&(1<<j))
#define toggle(N, j) (N^(1<<j))
#define turnOff(N, j) (N & ~(1<<j))
#define CLEAR(A, x) ( memset(A,x,sizeof(A)) )
#define pii pair <int, int>
#define pb push_back
#define open freopen("D:/a.txt", "r", stdin);
#define write freopen("D:/b.txt","w", stdout);
#define inf (1<<28)
#define ll long long
#define mod 1000000007
#define debug cout<<"ok"<<endl;
#define gc getchar
#define ls(n) (n<<1)
#define rs(n) ls(n)|1
#define MID(a,b) ((a+b)>>1)
#define fs first
#define sc second
#define mx 100010

//Fast Reader
template<class T>inline bool read(T &x) {
    int c=getchar();
    int sgn=1;
    while(~c&&c<'0'||c>'9') {
        if(c=='-')sgn=-1;
        c=getchar();
    }
    for(x=0; ~c&&'0'<=c&&c<='9'; c=getchar())x=x*10+c-'0';
    x*=sgn;
    return ~c;
}
int X[]= {-1, -1, -1, 0, 1, 1, 1, 0};   //x 8 direction
int Y[]= {-1, 0, +1, 1, 1, 0, -1, -1};  //y 8 direction
// int X[]= {-1, 0, 1, 0};   //x 4 direction
// int Y[]= { 0, 1, 0, -1};  //y 4 direction

map<int,int>mp;
int n;
int arr[110];
int nmbr[mx*10];
pii cnt[mx*10];

int binSearch(int val, int size){
    int l=0,r=size-1;
    while(l<=r){
        int mid=MID(l,r);
        if(val>cnt[mid].first)
            l=mid+1;
        else if(val<cnt[mid].first)
            r=mid-1;
        else return cnt[mid].second;
    }
    return 0;
}

int main() {
    #ifdef LOCAL
    open
    double st=clock(),en;
    #endif // LOCAL

    read(n);
    for(int i=0;i<n;i++)read(arr[i]);
    int idx=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            for(int k=0;k<n;k++){
                nmbr[idx++]=arr[i]*arr[j]+arr[k];
            }
        }
    }
    sort(nmbr,nmbr+idx);
    int sz=0;
    cnt[0]=pii(nmbr[0],1);
    for(int i=1;i<idx;i++){
        if(nmbr[i]==cnt[sz].first){
            cnt[sz].second++;
        }
        else{
            cnt[++sz]=pii(nmbr[i],1);
        }
    }
    sz++;
    ll ans=0ll;
    for(int i=0;i<n;i++){
        if(arr[i]==0)continue;

        for(int j=0;j<n;j++){
            for(int k=0;k<n;k++){
                int tmp=arr[i]*(arr[j]+arr[k]);
                ans+=binSearch(tmp,sz);
            }
        }
    }
    printf("%lld\n",ans);

    #ifdef LOCAL
    en=clock();
    cout<<"Time: ";
    cerr<<(double)(en-st)/CLOCKS_PER_SEC<<endl;
    #endif // LOCAL
    return 0;
}




